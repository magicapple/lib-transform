!function(win,lib){function Transform(a){a||(a=[[1,0,0],[0,1,0],[0,0,1]]),this.assign(a)}lib.transform=Transform,Transform.prototype[2]=[0,0,1],Transform.prototype.assign=function(a){return this[0]||(this[0]=[]),this[0][0]=a[0][0],this[0][1]=a[0][1],this[0][2]=a[0][2],this[1]||(this[1]=[]),this[1][0]=a[1][0],this[1][1]=a[1][1],this[1][2]=a[1][2],this},Transform.prototype.mul=function(a){return this[0]=[this[0][0]*a[0][0]+this[0][1]*a[1][0]+this[0][2]*a[2][0],this[0][0]*a[0][1]+this[0][1]*a[1][1]+this[0][2]*a[2][1],this[0][0]*a[0][2]+this[0][1]*a[1][2]+this[0][2]*a[2][2]],this[1]=[this[1][0]*a[0][0]+this[1][1]*a[1][0]+this[1][2]*a[2][0],this[1][0]*a[0][1]+this[1][1]*a[1][1]+this[1][2]*a[2][1],this[1][0]*a[0][2]+this[1][1]*a[1][2]+this[1][2]*a[2][2]],this},Transform.prototype.rotate=function(rad){with(Math)this.mul([[cos(rad),-sin(rad),0],[sin(rad),cos(rad),0],[0,0,1]]);return this},Transform.prototype.scale=function(a,b){return 1===arguments.length&&(b=a),this.mul([[a,0,0],[0,b,0],[0,0,1]]),this},Transform.prototype.skew=function(sx,sy){with(Math)this.mul([[0,tan(sx),0],[tan(sy),0,0],[0,0,1]]);return this},Transform.prototype.translate=function(a,b){return this.mul([[1,0,a],[0,1,b],[0,0,1]]),this},Transform.prototype.at=function(a,b){var c=this;return{rotate:function(d){return c.translate(a,b),c.rotate(d),c.translate(-a,-b),c},scale:function(d,e){return c.translate(a,b),c.scale(d,e),c.translate(-a,-b),c},skew:function(d,e){return c.translate(a,b),c.skew(d,e),c.translate(-a,-b),c}}},Transform.prototype.toString=function(){return[[this[0][0],this[0][1],this[0][2]].join("	"),[this[1][0],this[1][1],this[1][2]].join("	"),[this[2][0],this[2][1],this[2][2]].join("	")].join("\n")},Transform.prototype.toTransformString=function(){return"matrix("+this[0][0].toFixed(6)+","+this[1][0].toFixed(6)+","+this[0][1].toFixed(6)+","+this[1][1].toFixed(6)+","+this[0][2].toFixed(3)+","+this[1][2].toFixed(3)+")"},Transform.prototype.parseTransformString=function(a){if("none"==a)return this.assign([[1,0,0],[0,1,0],[0,0,1]]),this;var b=a.match(/matrix\( *([^ ,]+), *([^ ,]+), *([^ ,]+), *([^ ,]+), *([^ ,]+), *([^ ,]+)\)/).slice(1).map(function(a){return parseFloat(a)});return this.assign([[b[0],b[2],b[4]],[b[1],b[3],b[5]],[0,0,1]]),this}}(window,window.lib||(window.lib={}));
if (window.KISSY) {KISSY.add('mtb/lib-transform/0.1.0/build/transform.cmd',function() {return window.lib.transform;},{requries:[]);} else if ('undefined' !== typeof define) {define('mtb/lib-transform/0.1.0/build/transform.cmd', [], function(){require();return window.lib.transform;});}